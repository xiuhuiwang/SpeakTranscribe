{"ast":null,"code":"import * as cookie from 'cookie';\nimport { hasDocumentCookie, parseCookies, readCookie } from './utils';\nexport default class Cookies {\n  constructor(cookies) {\n    let defaultSetOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.changeListeners = [];\n    this.HAS_DOCUMENT_COOKIE = false;\n\n    this.update = () => {\n      if (!this.HAS_DOCUMENT_COOKIE) {\n        return;\n      }\n\n      const previousCookies = this.cookies;\n      this.cookies = cookie.parse(document.cookie);\n\n      this._checkChanges(previousCookies);\n    };\n\n    const domCookies = typeof document === 'undefined' ? '' : document.cookie;\n    this.cookies = parseCookies(cookies || domCookies);\n    this.defaultSetOptions = defaultSetOptions;\n    this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\n  }\n\n  _emitChange(params) {\n    for (let i = 0; i < this.changeListeners.length; ++i) {\n      this.changeListeners[i](params);\n    }\n  }\n\n  _checkChanges(newCookies) {\n    const names = new Set(Object.keys(newCookies).concat(Object.keys(this.cookies)));\n    names.forEach(name => {\n      if (newCookies[name] !== this.cookies[name]) {\n        this._emitChange({\n          name,\n          value: readCookie(newCookies[name])\n        });\n      }\n    });\n  }\n\n  _startPolling() {\n    this.pollingInterval = setInterval(this.update, 300);\n  }\n\n  _stopPolling() {\n    if (this.pollingInterval) {\n      clearInterval(this.pollingInterval);\n    }\n  }\n\n  get(name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!options.doNotUpdate) {\n      this.update();\n    }\n\n    return readCookie(this.cookies[name], options);\n  }\n\n  getAll() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!options.doNotUpdate) {\n      this.update();\n    }\n\n    const result = {};\n\n    for (let name in this.cookies) {\n      result[name] = readCookie(this.cookies[name], options);\n    }\n\n    return result;\n  }\n\n  set(name, value, options) {\n    if (options) {\n      options = Object.assign(Object.assign({}, this.defaultSetOptions), options);\n    } else {\n      options = this.defaultSetOptions;\n    }\n\n    const stringValue = typeof value === 'string' ? value : JSON.stringify(value);\n    this.cookies = Object.assign(Object.assign({}, this.cookies), {\n      [name]: stringValue\n    });\n\n    if (this.HAS_DOCUMENT_COOKIE) {\n      document.cookie = cookie.serialize(name, stringValue, options);\n    }\n\n    this._emitChange({\n      name,\n      value,\n      options\n    });\n  }\n\n  remove(name, options) {\n    const finalOptions = options = Object.assign(Object.assign({}, options), {\n      expires: new Date(1970, 1, 1, 0, 0, 1),\n      maxAge: 0\n    });\n    this.cookies = Object.assign({}, this.cookies);\n    delete this.cookies[name];\n\n    if (this.HAS_DOCUMENT_COOKIE) {\n      document.cookie = cookie.serialize(name, '', finalOptions);\n    }\n\n    this._emitChange({\n      name,\n      value: undefined,\n      options\n    });\n  }\n\n  addChangeListener(callback) {\n    this.changeListeners.push(callback);\n\n    if (this.changeListeners.length === 1) {\n      if (typeof window === 'object' && 'cookieStore' in window) {\n        window.cookieStore.addEventListener('change', this.update);\n      } else {\n        this._startPolling();\n      }\n    }\n  }\n\n  removeChangeListener(callback) {\n    const idx = this.changeListeners.indexOf(callback);\n\n    if (idx >= 0) {\n      this.changeListeners.splice(idx, 1);\n    }\n\n    if (this.changeListeners.length === 0) {\n      if (typeof window === 'object' && 'cookieStore' in window) {\n        window.cookieStore.removeEventListener('change', this.update);\n      } else {\n        this._stopPolling();\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/xiuhuiwang/Documents/USF/CS686_CloudComputing/final/mld/node_modules/universal-cookie/es6/Cookies.js"],"names":["cookie","hasDocumentCookie","parseCookies","readCookie","Cookies","constructor","cookies","defaultSetOptions","changeListeners","HAS_DOCUMENT_COOKIE","update","previousCookies","parse","document","_checkChanges","domCookies","_emitChange","params","i","length","newCookies","names","Set","Object","keys","concat","forEach","name","value","_startPolling","pollingInterval","setInterval","_stopPolling","clearInterval","get","options","doNotUpdate","getAll","result","set","assign","stringValue","JSON","stringify","serialize","remove","finalOptions","expires","Date","maxAge","undefined","addChangeListener","callback","push","window","cookieStore","addEventListener","removeChangeListener","idx","indexOf","splice","removeEventListener"],"mappings":"AAAA,OAAO,KAAKA,MAAZ,MAAwB,QAAxB;AACA,SAASC,iBAAT,EAA4BC,YAA5B,EAA0CC,UAA1C,QAA4D,SAA5D;AACA,eAAe,MAAMC,OAAN,CAAc;AACzBC,EAAAA,WAAW,CAACC,OAAD,EAAkC;AAAA,QAAxBC,iBAAwB,uEAAJ,EAAI;AACzC,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,mBAAL,GAA2B,KAA3B;;AACA,SAAKC,MAAL,GAAc,MAAM;AAChB,UAAI,CAAC,KAAKD,mBAAV,EAA+B;AAC3B;AACH;;AACD,YAAME,eAAe,GAAG,KAAKL,OAA7B;AACA,WAAKA,OAAL,GAAeN,MAAM,CAACY,KAAP,CAAaC,QAAQ,CAACb,MAAtB,CAAf;;AACA,WAAKc,aAAL,CAAmBH,eAAnB;AACH,KAPD;;AAQA,UAAMI,UAAU,GAAG,OAAOF,QAAP,KAAoB,WAApB,GAAkC,EAAlC,GAAuCA,QAAQ,CAACb,MAAnE;AACA,SAAKM,OAAL,GAAeJ,YAAY,CAACI,OAAO,IAAIS,UAAZ,CAA3B;AACA,SAAKR,iBAAL,GAAyBA,iBAAzB;AACA,SAAKE,mBAAL,GAA2BR,iBAAiB,EAA5C;AACH;;AACDe,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKV,eAAL,CAAqBW,MAAzC,EAAiD,EAAED,CAAnD,EAAsD;AAClD,WAAKV,eAAL,CAAqBU,CAArB,EAAwBD,MAAxB;AACH;AACJ;;AACDH,EAAAA,aAAa,CAACM,UAAD,EAAa;AACtB,UAAMC,KAAK,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,IAAP,CAAYJ,UAAZ,EAAwBK,MAAxB,CAA+BF,MAAM,CAACC,IAAP,CAAY,KAAKlB,OAAjB,CAA/B,CAAR,CAAd;AACAe,IAAAA,KAAK,CAACK,OAAN,CAAeC,IAAD,IAAU;AACpB,UAAIP,UAAU,CAACO,IAAD,CAAV,KAAqB,KAAKrB,OAAL,CAAaqB,IAAb,CAAzB,EAA6C;AACzC,aAAKX,WAAL,CAAiB;AACbW,UAAAA,IADa;AAEbC,UAAAA,KAAK,EAAEzB,UAAU,CAACiB,UAAU,CAACO,IAAD,CAAX;AAFJ,SAAjB;AAIH;AACJ,KAPD;AAQH;;AACDE,EAAAA,aAAa,GAAG;AACZ,SAAKC,eAAL,GAAuBC,WAAW,CAAC,KAAKrB,MAAN,EAAc,GAAd,CAAlC;AACH;;AACDsB,EAAAA,YAAY,GAAG;AACX,QAAI,KAAKF,eAAT,EAA0B;AACtBG,MAAAA,aAAa,CAAC,KAAKH,eAAN,CAAb;AACH;AACJ;;AACDI,EAAAA,GAAG,CAACP,IAAD,EAAqB;AAAA,QAAdQ,OAAc,uEAAJ,EAAI;;AACpB,QAAI,CAACA,OAAO,CAACC,WAAb,EAA0B;AACtB,WAAK1B,MAAL;AACH;;AACD,WAAOP,UAAU,CAAC,KAAKG,OAAL,CAAaqB,IAAb,CAAD,EAAqBQ,OAArB,CAAjB;AACH;;AACDE,EAAAA,MAAM,GAAe;AAAA,QAAdF,OAAc,uEAAJ,EAAI;;AACjB,QAAI,CAACA,OAAO,CAACC,WAAb,EAA0B;AACtB,WAAK1B,MAAL;AACH;;AACD,UAAM4B,MAAM,GAAG,EAAf;;AACA,SAAK,IAAIX,IAAT,IAAiB,KAAKrB,OAAtB,EAA+B;AAC3BgC,MAAAA,MAAM,CAACX,IAAD,CAAN,GAAexB,UAAU,CAAC,KAAKG,OAAL,CAAaqB,IAAb,CAAD,EAAqBQ,OAArB,CAAzB;AACH;;AACD,WAAOG,MAAP;AACH;;AACDC,EAAAA,GAAG,CAACZ,IAAD,EAAOC,KAAP,EAAcO,OAAd,EAAuB;AACtB,QAAIA,OAAJ,EAAa;AACTA,MAAAA,OAAO,GAAGZ,MAAM,CAACiB,MAAP,CAAcjB,MAAM,CAACiB,MAAP,CAAc,EAAd,EAAkB,KAAKjC,iBAAvB,CAAd,EAAyD4B,OAAzD,CAAV;AACH,KAFD,MAGK;AACDA,MAAAA,OAAO,GAAG,KAAK5B,iBAAf;AACH;;AACD,UAAMkC,WAAW,GAAG,OAAOb,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCc,IAAI,CAACC,SAAL,CAAef,KAAf,CAAxD;AACA,SAAKtB,OAAL,GAAeiB,MAAM,CAACiB,MAAP,CAAcjB,MAAM,CAACiB,MAAP,CAAc,EAAd,EAAkB,KAAKlC,OAAvB,CAAd,EAA+C;AAAE,OAACqB,IAAD,GAAQc;AAAV,KAA/C,CAAf;;AACA,QAAI,KAAKhC,mBAAT,EAA8B;AAC1BI,MAAAA,QAAQ,CAACb,MAAT,GAAkBA,MAAM,CAAC4C,SAAP,CAAiBjB,IAAjB,EAAuBc,WAAvB,EAAoCN,OAApC,CAAlB;AACH;;AACD,SAAKnB,WAAL,CAAiB;AAAEW,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeO,MAAAA;AAAf,KAAjB;AACH;;AACDU,EAAAA,MAAM,CAAClB,IAAD,EAAOQ,OAAP,EAAgB;AAClB,UAAMW,YAAY,GAAIX,OAAO,GAAGZ,MAAM,CAACiB,MAAP,CAAcjB,MAAM,CAACiB,MAAP,CAAc,EAAd,EAAkBL,OAAlB,CAAd,EAA0C;AAAEY,MAAAA,OAAO,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,CAAX;AAA0CC,MAAAA,MAAM,EAAE;AAAlD,KAA1C,CAAhC;AACA,SAAK3C,OAAL,GAAeiB,MAAM,CAACiB,MAAP,CAAc,EAAd,EAAkB,KAAKlC,OAAvB,CAAf;AACA,WAAO,KAAKA,OAAL,CAAaqB,IAAb,CAAP;;AACA,QAAI,KAAKlB,mBAAT,EAA8B;AAC1BI,MAAAA,QAAQ,CAACb,MAAT,GAAkBA,MAAM,CAAC4C,SAAP,CAAiBjB,IAAjB,EAAuB,EAAvB,EAA2BmB,YAA3B,CAAlB;AACH;;AACD,SAAK9B,WAAL,CAAiB;AAAEW,MAAAA,IAAF;AAAQC,MAAAA,KAAK,EAAEsB,SAAf;AAA0Bf,MAAAA;AAA1B,KAAjB;AACH;;AACDgB,EAAAA,iBAAiB,CAACC,QAAD,EAAW;AACxB,SAAK5C,eAAL,CAAqB6C,IAArB,CAA0BD,QAA1B;;AACA,QAAI,KAAK5C,eAAL,CAAqBW,MAArB,KAAgC,CAApC,EAAuC;AACnC,UAAI,OAAOmC,MAAP,KAAkB,QAAlB,IAA8B,iBAAiBA,MAAnD,EAA2D;AACvDA,QAAAA,MAAM,CAACC,WAAP,CAAmBC,gBAAnB,CAAoC,QAApC,EAA8C,KAAK9C,MAAnD;AACH,OAFD,MAGK;AACD,aAAKmB,aAAL;AACH;AACJ;AACJ;;AACD4B,EAAAA,oBAAoB,CAACL,QAAD,EAAW;AAC3B,UAAMM,GAAG,GAAG,KAAKlD,eAAL,CAAqBmD,OAArB,CAA6BP,QAA7B,CAAZ;;AACA,QAAIM,GAAG,IAAI,CAAX,EAAc;AACV,WAAKlD,eAAL,CAAqBoD,MAArB,CAA4BF,GAA5B,EAAiC,CAAjC;AACH;;AACD,QAAI,KAAKlD,eAAL,CAAqBW,MAArB,KAAgC,CAApC,EAAuC;AACnC,UAAI,OAAOmC,MAAP,KAAkB,QAAlB,IAA8B,iBAAiBA,MAAnD,EAA2D;AACvDA,QAAAA,MAAM,CAACC,WAAP,CAAmBM,mBAAnB,CAAuC,QAAvC,EAAiD,KAAKnD,MAAtD;AACH,OAFD,MAGK;AACD,aAAKsB,YAAL;AACH;AACJ;AACJ;;AAxGwB","sourcesContent":["import * as cookie from 'cookie';\nimport { hasDocumentCookie, parseCookies, readCookie } from './utils';\nexport default class Cookies {\n    constructor(cookies, defaultSetOptions = {}) {\n        this.changeListeners = [];\n        this.HAS_DOCUMENT_COOKIE = false;\n        this.update = () => {\n            if (!this.HAS_DOCUMENT_COOKIE) {\n                return;\n            }\n            const previousCookies = this.cookies;\n            this.cookies = cookie.parse(document.cookie);\n            this._checkChanges(previousCookies);\n        };\n        const domCookies = typeof document === 'undefined' ? '' : document.cookie;\n        this.cookies = parseCookies(cookies || domCookies);\n        this.defaultSetOptions = defaultSetOptions;\n        this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\n    }\n    _emitChange(params) {\n        for (let i = 0; i < this.changeListeners.length; ++i) {\n            this.changeListeners[i](params);\n        }\n    }\n    _checkChanges(newCookies) {\n        const names = new Set(Object.keys(newCookies).concat(Object.keys(this.cookies)));\n        names.forEach((name) => {\n            if (newCookies[name] !== this.cookies[name]) {\n                this._emitChange({\n                    name,\n                    value: readCookie(newCookies[name]),\n                });\n            }\n        });\n    }\n    _startPolling() {\n        this.pollingInterval = setInterval(this.update, 300);\n    }\n    _stopPolling() {\n        if (this.pollingInterval) {\n            clearInterval(this.pollingInterval);\n        }\n    }\n    get(name, options = {}) {\n        if (!options.doNotUpdate) {\n            this.update();\n        }\n        return readCookie(this.cookies[name], options);\n    }\n    getAll(options = {}) {\n        if (!options.doNotUpdate) {\n            this.update();\n        }\n        const result = {};\n        for (let name in this.cookies) {\n            result[name] = readCookie(this.cookies[name], options);\n        }\n        return result;\n    }\n    set(name, value, options) {\n        if (options) {\n            options = Object.assign(Object.assign({}, this.defaultSetOptions), options);\n        }\n        else {\n            options = this.defaultSetOptions;\n        }\n        const stringValue = typeof value === 'string' ? value : JSON.stringify(value);\n        this.cookies = Object.assign(Object.assign({}, this.cookies), { [name]: stringValue });\n        if (this.HAS_DOCUMENT_COOKIE) {\n            document.cookie = cookie.serialize(name, stringValue, options);\n        }\n        this._emitChange({ name, value, options });\n    }\n    remove(name, options) {\n        const finalOptions = (options = Object.assign(Object.assign({}, options), { expires: new Date(1970, 1, 1, 0, 0, 1), maxAge: 0 }));\n        this.cookies = Object.assign({}, this.cookies);\n        delete this.cookies[name];\n        if (this.HAS_DOCUMENT_COOKIE) {\n            document.cookie = cookie.serialize(name, '', finalOptions);\n        }\n        this._emitChange({ name, value: undefined, options });\n    }\n    addChangeListener(callback) {\n        this.changeListeners.push(callback);\n        if (this.changeListeners.length === 1) {\n            if (typeof window === 'object' && 'cookieStore' in window) {\n                window.cookieStore.addEventListener('change', this.update);\n            }\n            else {\n                this._startPolling();\n            }\n        }\n    }\n    removeChangeListener(callback) {\n        const idx = this.changeListeners.indexOf(callback);\n        if (idx >= 0) {\n            this.changeListeners.splice(idx, 1);\n        }\n        if (this.changeListeners.length === 0) {\n            if (typeof window === 'object' && 'cookieStore' in window) {\n                window.cookieStore.removeEventListener('change', this.update);\n            }\n            else {\n                this._stopPolling();\n            }\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}