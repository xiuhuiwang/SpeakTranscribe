{"ast":null,"code":"const timespan = require('./lib/timespan');\n\nconst PS_SUPPORTED = require('./lib/psSupported');\n\nconst validateAsymmetricKey = require('./lib/validateAsymmetricKey');\n\nconst jws = require('jws');\n\nconst includes = require('lodash.includes');\n\nconst isBoolean = require('lodash.isboolean');\n\nconst isInteger = require('lodash.isinteger');\n\nconst isNumber = require('lodash.isnumber');\n\nconst isPlainObject = require('lodash.isplainobject');\n\nconst isString = require('lodash.isstring');\n\nconst once = require('lodash.once');\n\nconst {\n  KeyObject,\n  createSecretKey,\n  createPrivateKey\n} = require('crypto');\n\nconst SUPPORTED_ALGS = ['RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'ES512', 'HS256', 'HS384', 'HS512', 'none'];\n\nif (PS_SUPPORTED) {\n  SUPPORTED_ALGS.splice(3, 0, 'PS256', 'PS384', 'PS512');\n}\n\nconst sign_options_schema = {\n  expiresIn: {\n    isValid: function (value) {\n      return isInteger(value) || isString(value) && value;\n    },\n    message: '\"expiresIn\" should be a number of seconds or string representing a timespan'\n  },\n  notBefore: {\n    isValid: function (value) {\n      return isInteger(value) || isString(value) && value;\n    },\n    message: '\"notBefore\" should be a number of seconds or string representing a timespan'\n  },\n  audience: {\n    isValid: function (value) {\n      return isString(value) || Array.isArray(value);\n    },\n    message: '\"audience\" must be a string or array'\n  },\n  algorithm: {\n    isValid: includes.bind(null, SUPPORTED_ALGS),\n    message: '\"algorithm\" must be a valid string enum value'\n  },\n  header: {\n    isValid: isPlainObject,\n    message: '\"header\" must be an object'\n  },\n  encoding: {\n    isValid: isString,\n    message: '\"encoding\" must be a string'\n  },\n  issuer: {\n    isValid: isString,\n    message: '\"issuer\" must be a string'\n  },\n  subject: {\n    isValid: isString,\n    message: '\"subject\" must be a string'\n  },\n  jwtid: {\n    isValid: isString,\n    message: '\"jwtid\" must be a string'\n  },\n  noTimestamp: {\n    isValid: isBoolean,\n    message: '\"noTimestamp\" must be a boolean'\n  },\n  keyid: {\n    isValid: isString,\n    message: '\"keyid\" must be a string'\n  },\n  mutatePayload: {\n    isValid: isBoolean,\n    message: '\"mutatePayload\" must be a boolean'\n  },\n  allowInsecureKeySizes: {\n    isValid: isBoolean,\n    message: '\"allowInsecureKeySizes\" must be a boolean'\n  },\n  allowInvalidAsymmetricKeyTypes: {\n    isValid: isBoolean,\n    message: '\"allowInvalidAsymmetricKeyTypes\" must be a boolean'\n  }\n};\nconst registered_claims_schema = {\n  iat: {\n    isValid: isNumber,\n    message: '\"iat\" should be a number of seconds'\n  },\n  exp: {\n    isValid: isNumber,\n    message: '\"exp\" should be a number of seconds'\n  },\n  nbf: {\n    isValid: isNumber,\n    message: '\"nbf\" should be a number of seconds'\n  }\n};\n\nfunction validate(schema, allowUnknown, object, parameterName) {\n  if (!isPlainObject(object)) {\n    throw new Error('Expected \"' + parameterName + '\" to be a plain object.');\n  }\n\n  Object.keys(object).forEach(function (key) {\n    const validator = schema[key];\n\n    if (!validator) {\n      if (!allowUnknown) {\n        throw new Error('\"' + key + '\" is not allowed in \"' + parameterName + '\"');\n      }\n\n      return;\n    }\n\n    if (!validator.isValid(object[key])) {\n      throw new Error(validator.message);\n    }\n  });\n}\n\nfunction validateOptions(options) {\n  return validate(sign_options_schema, false, options, 'options');\n}\n\nfunction validatePayload(payload) {\n  return validate(registered_claims_schema, true, payload, 'payload');\n}\n\nconst options_to_payload = {\n  'audience': 'aud',\n  'issuer': 'iss',\n  'subject': 'sub',\n  'jwtid': 'jti'\n};\nconst options_for_objects = ['expiresIn', 'notBefore', 'noTimestamp', 'audience', 'issuer', 'subject', 'jwtid'];\n\nmodule.exports = function (payload, secretOrPrivateKey, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else {\n    options = options || {};\n  }\n\n  const isObjectPayload = typeof payload === 'object' && !Buffer.isBuffer(payload);\n  const header = Object.assign({\n    alg: options.algorithm || 'HS256',\n    typ: isObjectPayload ? 'JWT' : undefined,\n    kid: options.keyid\n  }, options.header);\n\n  function failure(err) {\n    if (callback) {\n      return callback(err);\n    }\n\n    throw err;\n  }\n\n  if (!secretOrPrivateKey && options.algorithm !== 'none') {\n    return failure(new Error('secretOrPrivateKey must have a value'));\n  }\n\n  if (secretOrPrivateKey != null && !(secretOrPrivateKey instanceof KeyObject)) {\n    try {\n      secretOrPrivateKey = createPrivateKey(secretOrPrivateKey);\n    } catch (_) {\n      try {\n        secretOrPrivateKey = createSecretKey(typeof secretOrPrivateKey === 'string' ? Buffer.from(secretOrPrivateKey) : secretOrPrivateKey);\n      } catch (_) {\n        return failure(new Error('secretOrPrivateKey is not valid key material'));\n      }\n    }\n  }\n\n  if (header.alg.startsWith('HS') && secretOrPrivateKey.type !== 'secret') {\n    return failure(new Error(`secretOrPrivateKey must be a symmetric key when using ${header.alg}`));\n  } else if (/^(?:RS|PS|ES)/.test(header.alg)) {\n    if (secretOrPrivateKey.type !== 'private') {\n      return failure(new Error(`secretOrPrivateKey must be an asymmetric key when using ${header.alg}`));\n    }\n\n    if (!options.allowInsecureKeySizes && !header.alg.startsWith('ES') && secretOrPrivateKey.asymmetricKeyDetails !== undefined && //KeyObject.asymmetricKeyDetails is supported in Node 15+\n    secretOrPrivateKey.asymmetricKeyDetails.modulusLength < 2048) {\n      return failure(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`));\n    }\n  }\n\n  if (typeof payload === 'undefined') {\n    return failure(new Error('payload is required'));\n  } else if (isObjectPayload) {\n    try {\n      validatePayload(payload);\n    } catch (error) {\n      return failure(error);\n    }\n\n    if (!options.mutatePayload) {\n      payload = Object.assign({}, payload);\n    }\n  } else {\n    const invalid_options = options_for_objects.filter(function (opt) {\n      return typeof options[opt] !== 'undefined';\n    });\n\n    if (invalid_options.length > 0) {\n      return failure(new Error('invalid ' + invalid_options.join(',') + ' option for ' + typeof payload + ' payload'));\n    }\n  }\n\n  if (typeof payload.exp !== 'undefined' && typeof options.expiresIn !== 'undefined') {\n    return failure(new Error('Bad \"options.expiresIn\" option the payload already has an \"exp\" property.'));\n  }\n\n  if (typeof payload.nbf !== 'undefined' && typeof options.notBefore !== 'undefined') {\n    return failure(new Error('Bad \"options.notBefore\" option the payload already has an \"nbf\" property.'));\n  }\n\n  try {\n    validateOptions(options);\n  } catch (error) {\n    return failure(error);\n  }\n\n  if (!options.allowInvalidAsymmetricKeyTypes) {\n    try {\n      validateAsymmetricKey(header.alg, secretOrPrivateKey);\n    } catch (error) {\n      return failure(error);\n    }\n  }\n\n  const timestamp = payload.iat || Math.floor(Date.now() / 1000);\n\n  if (options.noTimestamp) {\n    delete payload.iat;\n  } else if (isObjectPayload) {\n    payload.iat = timestamp;\n  }\n\n  if (typeof options.notBefore !== 'undefined') {\n    try {\n      payload.nbf = timespan(options.notBefore, timestamp);\n    } catch (err) {\n      return failure(err);\n    }\n\n    if (typeof payload.nbf === 'undefined') {\n      return failure(new Error('\"notBefore\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n    }\n  }\n\n  if (typeof options.expiresIn !== 'undefined' && typeof payload === 'object') {\n    try {\n      payload.exp = timespan(options.expiresIn, timestamp);\n    } catch (err) {\n      return failure(err);\n    }\n\n    if (typeof payload.exp === 'undefined') {\n      return failure(new Error('\"expiresIn\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n    }\n  }\n\n  Object.keys(options_to_payload).forEach(function (key) {\n    const claim = options_to_payload[key];\n\n    if (typeof options[key] !== 'undefined') {\n      if (typeof payload[claim] !== 'undefined') {\n        return failure(new Error('Bad \"options.' + key + '\" option. The payload already has an \"' + claim + '\" property.'));\n      }\n\n      payload[claim] = options[key];\n    }\n  });\n  const encoding = options.encoding || 'utf8';\n\n  if (typeof callback === 'function') {\n    callback = callback && once(callback);\n    jws.createSign({\n      header: header,\n      privateKey: secretOrPrivateKey,\n      payload: payload,\n      encoding: encoding\n    }).once('error', callback).once('done', function (signature) {\n      // TODO: Remove in favor of the modulus length check before signing once node 15+ is the minimum supported version\n      if (!options.allowInsecureKeySizes && /^(?:RS|PS)/.test(header.alg) && signature.length < 256) {\n        return callback(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`));\n      }\n\n      callback(null, signature);\n    });\n  } else {\n    let signature = jws.sign({\n      header: header,\n      payload: payload,\n      secret: secretOrPrivateKey,\n      encoding: encoding\n    }); // TODO: Remove in favor of the modulus length check before signing once node 15+ is the minimum supported version\n\n    if (!options.allowInsecureKeySizes && /^(?:RS|PS)/.test(header.alg) && signature.length < 256) {\n      throw new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`);\n    }\n\n    return signature;\n  }\n};","map":{"version":3,"sources":["/Users/xiuhuiwang/Documents/USF/CS686_CloudComputing/final/mld/node_modules/jsonwebtoken/sign.js"],"names":["timespan","require","PS_SUPPORTED","validateAsymmetricKey","jws","includes","isBoolean","isInteger","isNumber","isPlainObject","isString","once","KeyObject","createSecretKey","createPrivateKey","SUPPORTED_ALGS","splice","sign_options_schema","expiresIn","isValid","value","message","notBefore","audience","Array","isArray","algorithm","bind","header","encoding","issuer","subject","jwtid","noTimestamp","keyid","mutatePayload","allowInsecureKeySizes","allowInvalidAsymmetricKeyTypes","registered_claims_schema","iat","exp","nbf","validate","schema","allowUnknown","object","parameterName","Error","Object","keys","forEach","key","validator","validateOptions","options","validatePayload","payload","options_to_payload","options_for_objects","module","exports","secretOrPrivateKey","callback","isObjectPayload","Buffer","isBuffer","assign","alg","typ","undefined","kid","failure","err","_","from","startsWith","type","test","asymmetricKeyDetails","modulusLength","error","invalid_options","filter","opt","length","join","timestamp","Math","floor","Date","now","claim","createSign","privateKey","signature","sign","secret"],"mappings":"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","sourcesContent":["const timespan = require('./lib/timespan');\nconst PS_SUPPORTED = require('./lib/psSupported');\nconst validateAsymmetricKey = require('./lib/validateAsymmetricKey');\nconst jws = require('jws');\nconst includes = require('lodash.includes');\nconst isBoolean = require('lodash.isboolean');\nconst isInteger = require('lodash.isinteger');\nconst isNumber = require('lodash.isnumber');\nconst isPlainObject = require('lodash.isplainobject');\nconst isString = require('lodash.isstring');\nconst once = require('lodash.once');\nconst { KeyObject, createSecretKey, createPrivateKey } = require('crypto')\n\nconst SUPPORTED_ALGS = ['RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'ES512', 'HS256', 'HS384', 'HS512', 'none'];\nif (PS_SUPPORTED) {\n  SUPPORTED_ALGS.splice(3, 0, 'PS256', 'PS384', 'PS512');\n}\n\nconst sign_options_schema = {\n  expiresIn: { isValid: function(value) { return isInteger(value) || (isString(value) && value); }, message: '\"expiresIn\" should be a number of seconds or string representing a timespan' },\n  notBefore: { isValid: function(value) { return isInteger(value) || (isString(value) && value); }, message: '\"notBefore\" should be a number of seconds or string representing a timespan' },\n  audience: { isValid: function(value) { return isString(value) || Array.isArray(value); }, message: '\"audience\" must be a string or array' },\n  algorithm: { isValid: includes.bind(null, SUPPORTED_ALGS), message: '\"algorithm\" must be a valid string enum value' },\n  header: { isValid: isPlainObject, message: '\"header\" must be an object' },\n  encoding: { isValid: isString, message: '\"encoding\" must be a string' },\n  issuer: { isValid: isString, message: '\"issuer\" must be a string' },\n  subject: { isValid: isString, message: '\"subject\" must be a string' },\n  jwtid: { isValid: isString, message: '\"jwtid\" must be a string' },\n  noTimestamp: { isValid: isBoolean, message: '\"noTimestamp\" must be a boolean' },\n  keyid: { isValid: isString, message: '\"keyid\" must be a string' },\n  mutatePayload: { isValid: isBoolean, message: '\"mutatePayload\" must be a boolean' },\n  allowInsecureKeySizes: { isValid: isBoolean, message: '\"allowInsecureKeySizes\" must be a boolean'},\n  allowInvalidAsymmetricKeyTypes: { isValid: isBoolean, message: '\"allowInvalidAsymmetricKeyTypes\" must be a boolean'}\n};\n\nconst registered_claims_schema = {\n  iat: { isValid: isNumber, message: '\"iat\" should be a number of seconds' },\n  exp: { isValid: isNumber, message: '\"exp\" should be a number of seconds' },\n  nbf: { isValid: isNumber, message: '\"nbf\" should be a number of seconds' }\n};\n\nfunction validate(schema, allowUnknown, object, parameterName) {\n  if (!isPlainObject(object)) {\n    throw new Error('Expected \"' + parameterName + '\" to be a plain object.');\n  }\n  Object.keys(object)\n    .forEach(function(key) {\n      const validator = schema[key];\n      if (!validator) {\n        if (!allowUnknown) {\n          throw new Error('\"' + key + '\" is not allowed in \"' + parameterName + '\"');\n        }\n        return;\n      }\n      if (!validator.isValid(object[key])) {\n        throw new Error(validator.message);\n      }\n    });\n}\n\nfunction validateOptions(options) {\n  return validate(sign_options_schema, false, options, 'options');\n}\n\nfunction validatePayload(payload) {\n  return validate(registered_claims_schema, true, payload, 'payload');\n}\n\nconst options_to_payload = {\n  'audience': 'aud',\n  'issuer': 'iss',\n  'subject': 'sub',\n  'jwtid': 'jti'\n};\n\nconst options_for_objects = [\n  'expiresIn',\n  'notBefore',\n  'noTimestamp',\n  'audience',\n  'issuer',\n  'subject',\n  'jwtid',\n];\n\nmodule.exports = function (payload, secretOrPrivateKey, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else {\n    options = options || {};\n  }\n\n  const isObjectPayload = typeof payload === 'object' &&\n                        !Buffer.isBuffer(payload);\n\n  const header = Object.assign({\n    alg: options.algorithm || 'HS256',\n    typ: isObjectPayload ? 'JWT' : undefined,\n    kid: options.keyid\n  }, options.header);\n\n  function failure(err) {\n    if (callback) {\n      return callback(err);\n    }\n    throw err;\n  }\n\n  if (!secretOrPrivateKey && options.algorithm !== 'none') {\n    return failure(new Error('secretOrPrivateKey must have a value'));\n  }\n\n  if (secretOrPrivateKey != null && !(secretOrPrivateKey instanceof KeyObject)) {\n    try {\n      secretOrPrivateKey = createPrivateKey(secretOrPrivateKey)\n    } catch (_) {\n      try {\n        secretOrPrivateKey = createSecretKey(typeof secretOrPrivateKey === 'string' ? Buffer.from(secretOrPrivateKey) : secretOrPrivateKey)\n      } catch (_) {\n        return failure(new Error('secretOrPrivateKey is not valid key material'));\n      }\n    }\n  }\n\n  if (header.alg.startsWith('HS') && secretOrPrivateKey.type !== 'secret') {\n    return failure(new Error((`secretOrPrivateKey must be a symmetric key when using ${header.alg}`)))\n  } else if (/^(?:RS|PS|ES)/.test(header.alg)) {\n    if (secretOrPrivateKey.type !== 'private') {\n      return failure(new Error((`secretOrPrivateKey must be an asymmetric key when using ${header.alg}`)))\n    }\n    if (!options.allowInsecureKeySizes &&\n      !header.alg.startsWith('ES') &&\n      secretOrPrivateKey.asymmetricKeyDetails !== undefined && //KeyObject.asymmetricKeyDetails is supported in Node 15+\n      secretOrPrivateKey.asymmetricKeyDetails.modulusLength < 2048) {\n      return failure(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`));\n    }\n  }\n\n  if (typeof payload === 'undefined') {\n    return failure(new Error('payload is required'));\n  } else if (isObjectPayload) {\n    try {\n      validatePayload(payload);\n    }\n    catch (error) {\n      return failure(error);\n    }\n    if (!options.mutatePayload) {\n      payload = Object.assign({},payload);\n    }\n  } else {\n    const invalid_options = options_for_objects.filter(function (opt) {\n      return typeof options[opt] !== 'undefined';\n    });\n\n    if (invalid_options.length > 0) {\n      return failure(new Error('invalid ' + invalid_options.join(',') + ' option for ' + (typeof payload ) + ' payload'));\n    }\n  }\n\n  if (typeof payload.exp !== 'undefined' && typeof options.expiresIn !== 'undefined') {\n    return failure(new Error('Bad \"options.expiresIn\" option the payload already has an \"exp\" property.'));\n  }\n\n  if (typeof payload.nbf !== 'undefined' && typeof options.notBefore !== 'undefined') {\n    return failure(new Error('Bad \"options.notBefore\" option the payload already has an \"nbf\" property.'));\n  }\n\n  try {\n    validateOptions(options);\n  }\n  catch (error) {\n    return failure(error);\n  }\n\n  if (!options.allowInvalidAsymmetricKeyTypes) {\n    try {\n      validateAsymmetricKey(header.alg, secretOrPrivateKey);\n    } catch (error) {\n      return failure(error);\n    }\n  }\n\n  const timestamp = payload.iat || Math.floor(Date.now() / 1000);\n\n  if (options.noTimestamp) {\n    delete payload.iat;\n  } else if (isObjectPayload) {\n    payload.iat = timestamp;\n  }\n\n  if (typeof options.notBefore !== 'undefined') {\n    try {\n      payload.nbf = timespan(options.notBefore, timestamp);\n    }\n    catch (err) {\n      return failure(err);\n    }\n    if (typeof payload.nbf === 'undefined') {\n      return failure(new Error('\"notBefore\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n    }\n  }\n\n  if (typeof options.expiresIn !== 'undefined' && typeof payload === 'object') {\n    try {\n      payload.exp = timespan(options.expiresIn, timestamp);\n    }\n    catch (err) {\n      return failure(err);\n    }\n    if (typeof payload.exp === 'undefined') {\n      return failure(new Error('\"expiresIn\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n    }\n  }\n\n  Object.keys(options_to_payload).forEach(function (key) {\n    const claim = options_to_payload[key];\n    if (typeof options[key] !== 'undefined') {\n      if (typeof payload[claim] !== 'undefined') {\n        return failure(new Error('Bad \"options.' + key + '\" option. The payload already has an \"' + claim + '\" property.'));\n      }\n      payload[claim] = options[key];\n    }\n  });\n\n  const encoding = options.encoding || 'utf8';\n\n  if (typeof callback === 'function') {\n    callback = callback && once(callback);\n\n    jws.createSign({\n      header: header,\n      privateKey: secretOrPrivateKey,\n      payload: payload,\n      encoding: encoding\n    }).once('error', callback)\n      .once('done', function (signature) {\n        // TODO: Remove in favor of the modulus length check before signing once node 15+ is the minimum supported version\n        if(!options.allowInsecureKeySizes && /^(?:RS|PS)/.test(header.alg) && signature.length < 256) {\n          return callback(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`))\n        }\n        callback(null, signature);\n      });\n  } else {\n    let signature = jws.sign({header: header, payload: payload, secret: secretOrPrivateKey, encoding: encoding});\n    // TODO: Remove in favor of the modulus length check before signing once node 15+ is the minimum supported version\n    if(!options.allowInsecureKeySizes && /^(?:RS|PS)/.test(header.alg) && signature.length < 256) {\n      throw new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`)\n    }\n    return signature\n  }\n};\n"]},"metadata":{},"sourceType":"script"}